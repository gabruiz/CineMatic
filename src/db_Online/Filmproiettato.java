package db_Online;
// Generated 1-mar-2018 12.26.47 by Hibernate Tools 4.3.1

import cinematic.HibernateUtilities;
import java.util.LinkedList;
import java.util.List;

/**
 * Filmproiettato generated by hbm2java
 */
public class Filmproiettato  implements java.io.Serializable {


     private FilmproiettatoId id;
     private String nomeSala;
     private String titolo;
     private String ora;
     private float prezzo;
     private boolean tridimensionale;
     private boolean anteprima;
     private int postiDisponibili;
	
	Cinema c;
     
    public HibernateUtilities hibernateUtilities;
    LinkedList<Poltrona> listaPoltrona;
     
     private LinkedList<Poltrona> listaPostiOccupati;
	
	
    public Filmproiettato() {
	            this.listaPostiOccupati = new LinkedList<Poltrona>();
         
        hibernateUtilities = new HibernateUtilities();
        hibernateUtilities.openSession();   
        List<Poltrona> lp = hibernateUtilities.find("poltrona","Poltrona");
        listaPoltrona = new LinkedList<Poltrona>();
    }

       public Filmproiettato(FilmproiettatoId id, int idCinema, int idSala, String nomeSala, int nFile, int nPosti,  String titolo, String ora, float prezzo, boolean tridimensionale, boolean anteprima, int postiDisponibili) {
        this.id = id;
       this.nomeSala = nomeSala;
       this.titolo = titolo;
       this.ora = ora;
       this.prezzo = prezzo;
       this.tridimensionale = tridimensionale;
       this.anteprima = anteprima;
       this.postiDisponibili = postiDisponibili;
	    this.listaPostiOccupati = new LinkedList<Poltrona>();
       

    }	
   
    public FilmproiettatoId getId() {
        return this.id;
    }
    
    public void setId(FilmproiettatoId id) {
        this.id = id;
    }
    public String getNomeSala() {
        return this.nomeSala;
    }
    
    public void setNomeSala(String nomeSala) {
        this.nomeSala = nomeSala;
    }
    public String getTitolo() {
        return this.titolo;
    }
    
    public void setTitolo(String titolo) {
        this.titolo = titolo;
    }
    public String getOra() {
        return this.ora;
    }
    
    public void setOra(String ora) {
        this.ora = ora;
    }
    public float getPrezzo() {
        return this.prezzo;
    }
    
    public void setPrezzo(float prezzo) {
        this.prezzo = prezzo;
    }
    public boolean isTridimensionale() {
        return this.tridimensionale;
    }
    
    public void setTridimensionale(boolean tridimensionale) {
        this.tridimensionale = tridimensionale;
    }
    public boolean isAnteprima() {
        return this.anteprima;
    }
    
    public void setAnteprima(boolean anteprima) {
        this.anteprima = anteprima;
    }
    public int getPostiDisponibili() {
        return this.postiDisponibili;
    }
    
    public void setPostiDisponibili(int postiDisponibili) {
        this.postiDisponibili = postiDisponibili;
    }


public LinkedList<Poltrona> getListaPostiOccupati() {
        return listaPostiOccupati;
    }

    public void addToListaPostiOccupati(Poltrona p) {
        this.listaPostiOccupati.add(p);
        System.out.println("Poltrona aggiunta alla lista del film proiettato");
    }
    
 
    public void caricaListaPoltrona(){
        List<Poltrona> lp = hibernateUtilities.find("poltrona","Poltrona");
        
        //System.out.println("Caricamento lista Poltrone...");
        for (Poltrona p : lp) {
            if (p.getId().getIdFilmProiettato()== this.id.getIdFilmProiettato()){            
                listaPoltrona.add(p);
                //System.out.println(p);
            }
        }
    }
    
    
    public LinkedList<Poltrona> getListaPoltrona (){

        return listaPoltrona;
    }
    
    public String setFila(int i){
        char inizioSala = 'A';
        return ""+(char)(inizioSala+i);
    }
    
    void setPostoOccupato(PoltronaId pId) {
        Poltrona p = findPoltronaById(pId);
        System.out.println("before: "+listaPoltrona);
        p.setOccupato(true);
        System.out.println("after: "+listaPoltrona);        
        System.out.println("Poltrona occupata");
        hibernateUtilities.save(p);      
    }

    private Poltrona findPoltronaById(PoltronaId pId) {
       for (Poltrona p: listaPoltrona)
           if (p.getId() == pId)
               return p;
       return null;
    }

    void creaSala(int idSala, int nFile, int nPosti) {
       hibernateUtilities = new HibernateUtilities();
       hibernateUtilities.openSession();  
       listaPoltrona = new LinkedList<Poltrona>();
       
       int numeroFile = nFile;
       int numeroPosti = nPosti;

               
        // CREAZIONE POLTRONA 
        for (int i=0; i<numeroFile; i++){
           for (int j=1; j<=numeroPosti; j++){
               String fila = setFila(i);
               System.out.println("\n\n\n ID FILM PROIETTATO: "+id.getIdFilmProiettato());
               PoltronaId idP = new PoltronaId (fila,j, id.getIdCinema(), id.getIdFilmProiettato());
               // vuole il boolean occupato
               Poltrona p = new Poltrona (idP, idSala , false);
               //System.out.println(p);

               hibernateUtilities.save(p);
               listaPoltrona.add(p);
           }
       }
    }
   


}


